name: GX CSV Schema Validation

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/gx_run_csv.yaml'
      - 'run_csv_validation.py'
      - 'great_expectations/**'
      - 'requirements.txt'

permissions:
  contents: write

jobs:
  gx-csv-validation:
    runs-on: ubuntu-latest
    outputs:
      gx_status: ${{ steps.capture-status.outputs.gx_status }}

    steps:
    # 1. code + history -------------------------------------------------------
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0        # we need full history to fetch gh-pages later

    # 2. Python ---------------------------------------------------------------
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Python dependencies
      run: pip install -r requirements.txt

    # 3. Bring in previous docs + metadata ------------------------------------
    - name: Fetch previous Data Docs & metadata
      run: |
        git fetch origin gh-pages
        git checkout origin/gh-pages -- gx_site            || echo "No gx_site yet"
        git checkout origin/gh-pages -- validation_metadata || echo "No metadata yet"

        # Copy old validations where GE expects them
        mkdir -p great_expectations/uncommitted/validations
        cp -r validation_metadata/. great_expectations/uncommitted/validations/ || true

    # 4. Authenticate to GCP  ---------------
    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

    # 5. Run the validation script -------------------------------------------
    - name: Run CSV schema validation
      run: python run_csv_validation.py

    # 6. Copy fresh docs + metadata back to gh-pages --------------------------
    - name: Stage updated docs & metadata
      run: |
        # Collect results produced in this run
        mkdir -p gx_site validation_metadata
        cp -r great_expectations/gx_docs_output/. gx_site/
        cp -r great_expectations/uncommitted/validations/. validation_metadata/

        # Commit to gh-pages
        git config --global user.name  "github-actions"
        git config --global user.email "github-actions@github.com"

        git switch gh-pages || git checkout --orphan gh-pages
        git add gx_site validation_metadata
        git commit -m "Update GX CSV docs [auto]" || echo "Nothing to commit"
        git push origin gh-pages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify-slack-validation-success:
    needs: gx-csv-validation
    if: needs.gx-csv-validation.outputs.gx_status == 'validation_passed'
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack (Validation Passed)
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: '#36a64f'
          SLACK_MESSAGE: |
            ‚úÖ *GX CSV Schema Validation Passed*
            ‚Ä¢ Repo: `${{ github.repository }}`
            ‚Ä¢ Workflow: `${{ github.workflow }}`
            ‚Ä¢ Run: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View logs>

  notify-slack-validation-failure:
    needs: gx-csv-validation
    if: needs.gx-csv-validation.outputs.gx_status == 'validation_failed'
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack (Validation Failed)
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: '#FFCC00'
          SLACK_MESSAGE: |
            ‚ö†Ô∏è *GX Validation Failed (expectations not met)*
            ‚Ä¢ Repo: `${{ github.repository }}`
            ‚Ä¢ Workflow: `${{ github.workflow }}`
            ‚Ä¢ Run: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View logs>

  notify-slack-script-failure:
    needs: gx-csv-validation
    if: needs.gx-csv-validation.outputs.gx_status == 'script_failed'
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack (Script Failed)
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: '#FF0000'
          SLACK_MESSAGE: |
            ‚ùå *GX Run Script Failed (exception during execution)*
            ‚Ä¢ Repo: `${{ github.repository }}`
            ‚Ä¢ Workflow: `${{ github.workflow }}`
            ‚Ä¢ Run: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View logs>

  notify-slack-gha-failure:
    needs: gx-csv-validation
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack (GHA Infra Failure)
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: '#800000'
          SLACK_MESSAGE: |
            üö® *GX Workflow Failed (Infrastructure / GHA Error)*
            ‚Ä¢ Repo: `${{ github.repository }}`
            ‚Ä¢ Workflow: `${{ github.workflow }}`
            ‚Ä¢ Run: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View logs>