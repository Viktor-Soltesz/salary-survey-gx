name: GX CSV Schema Validation

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/gx_run_csv.yaml'
      - 'run_csv_validation.py'
      - 'great_expectations/**'
      - 'requirements.txt'

permissions:
  contents: write

jobs:
  gx-csv-validation:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Run CSV schema validation
        run: python run_csv_validation.py

      - name: Commit updated GX Data Docs
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          # 1. Fetch gh-pages to have it available locally
          git fetch origin gh-pages

          # 2. Switch to gh-pages or create if it doesn't exist
          #    Important: This updates the working directory to gh-pages' state
          git switch gh-pages || git checkout --orphan gh-pages

          # 3. If gx_site exists on gh-pages, make sure it's in the working directory
          #    (it should be due to git switch, but explicitly checking it out again doesn't hurt for clarity)
          #    This ensures old files are present before copying new ones.
          git checkout origin/gh-pages -- gx_site || echo "No existing gx_site to checkout"

          # 4. Copy the newly generated GX Data Docs into the existing gx_site directory.
          #    This will add new files and overwrite existing ones with the same name.
          #    The important part is that files *not* generated by this run but existing
          #    in the old gx_site will remain.
          cp -r great_expectations/gx_docs_output/. gx_site/ # Use /. to copy contents, not the folder itself

          # 5. Add all changes in gx_site (new files, modified files)
          git add gx_site

          # 6. Commit and push
          git commit -m "Update GX CSV validation docs [auto]" || echo "No changes to commit"
          git push origin gh-pages # Removed --force as it's usually not needed with proper merge/add logic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify-slack-success:
    needs: gx-csv-validation
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack of success
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: '#36a64f'
          SLACK_MESSAGE: |
            ✅ *GX CSV Schema Validation Passed*
            • Repo: `${{ github.repository }}`
            • Workflow: `${{ github.workflow }}`
            • Run: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View logs>

  notify-slack-failure:
    needs: gx-csv-validation
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack of failure
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: '#FF0000'
          SLACK_MESSAGE: |
            ❌ *GX CSV Schema Validation Failed*
            • Repo: `${{ github.repository }}`
            • Workflow: `${{ github.workflow }}`
            • Run: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View logs>
